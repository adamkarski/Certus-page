import { c as create_ssr_component, a as add_attribute, e as each, b as escape, d as subscribe, v as validate_component } from "../../chunks/ssr.js";
import { p as page } from "../../chunks/stores.js";
import { w as writable } from "../../chunks/index.js";
import { a as activePage } from "../../chunks/visibilityStore.js";
const preloaderVisible = writable(true);
function getCookie(name) {
  return null;
}
function wasLandingShown() {
  return getCookie() === "true";
}
const createLandingStore = () => {
  const { subscribe: subscribe2, set, update } = writable(!wasLandingShown());
  return {
    subscribe: subscribe2,
    hide: () => {
      set(false);
    },
    reset: () => set(!wasLandingShown()),
    // dla testów
    show: () => set(true)
    // dodatkowa funkcja do pokazania
  };
};
const landingVisible = createLandingStore();
const css$1 = {
  code: '@charset "UTF-8";body.landing{overflow:hidden;position:relative;height:100vh;width:100vw}.machine.svelte-1q2nro5.svelte-1q2nro5{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);width:auto;height:100vh;z-index:2}.machine2.svelte-1q2nro5.svelte-1q2nro5{filter:blur(660px);position:absolute;top:0;left:0;width:100vw;height:100vh;object-fit:cover;z-index:1}.gradient.svelte-1q2nro5.svelte-1q2nro5{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;filter:opacity(0.9) brightness(0.7)}.targi-container.svelte-1q2nro5.svelte-1q2nro5{padding:20px;position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;z-index:1000;background-image:url(/assets/landing_targi2025/background.jpg);background-size:cover}.left-gradient.svelte-1q2nro5.svelte-1q2nro5{position:absolute;top:0;left:0;width:40%;height:100vh;z-index:3;pointer-events:none}.right-gradient.svelte-1q2nro5.svelte-1q2nro5{position:absolute;top:0;right:0;width:40%;height:100vh;z-index:3;pointer-events:none}.left-gradient-section.svelte-1q2nro5.svelte-1q2nro5{position:absolute;left:0;width:40%;z-index:3;pointer-events:none}.right-gradient-section.svelte-1q2nro5.svelte-1q2nro5{position:absolute;right:0;width:40%;z-index:3;pointer-events:none}.edge-blur-left.svelte-1q2nro5.svelte-1q2nro5{position:absolute;top:0;left:0;width:50%;height:100vh;z-index:1;overflow:hidden;pointer-events:none}.edge-blur-left.svelte-1q2nro5 img.svelte-1q2nro5{position:absolute;top:50%;left:0;transform:translateY(-50%) scaleX(3);width:auto;height:100vh;filter:blur(80px);opacity:0.8;object-fit:cover;clip-path:inset(0 70% 0 0)}.edge-blur-right.svelte-1q2nro5.svelte-1q2nro5{position:absolute;top:0;right:0;width:50%;height:100vh;z-index:1;overflow:hidden;pointer-events:none}.edge-blur-right.svelte-1q2nro5 img.svelte-1q2nro5{position:absolute;top:50%;right:0;transform:translateY(-50%) scaleX(3);width:auto;height:100vh;filter:blur(80px);opacity:0.8;object-fit:cover;clip-path:inset(0 0 0 70%)}',
  map: '{"version":3,"file":"landing_targi.svelte","sources":["landing_targi.svelte"],"sourcesContent":["<script>\\nimport { fade } from \'svelte/transition\';\\nimport { landingVisible } from \'$lib/landingStore\';\\nimport { onMount } from \'svelte\';\\n\\nlet leftGradient = \'\';\\nlet rightGradient = \'\';\\nlet leftGradients = []; // Tablica gradientów dla lewej strony\\nlet rightGradients = []; // Tablica gradientów dla prawej strony\\nlet machineImg;\\n\\nfunction handleClick() {\\n  landingVisible.hide();\\n}\\n\\nfunction analyzeImageColors(img) {\\n  const canvas = document.createElement(\'canvas\');\\n  const ctx = canvas.getContext(\'2d\');\\n  \\n  canvas.width = img.naturalWidth;\\n  canvas.height = img.naturalHeight;\\n  \\n  ctx.drawImage(img, 0, 0);\\n  \\n  const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\\n  const data = imageData.data;\\n  \\n  // Oblicz gdzie będą widoczne krawędzie obrazka na ekranie\\n  // Obrazek jest wyśrodkowany i ma height: 100vh, więc width będzie proporcjonalny\\n  const aspectRatio = canvas.width / canvas.height;\\n  const screenHeight = window.innerHeight;\\n  const screenWidth = window.innerWidth;\\n  const imageDisplayWidth = screenHeight * aspectRatio;\\n  \\n  // Jeśli obrazek jest szerszy niż ekran, będzie widoczna tylko środkowa część\\n  let leftEdgeX, rightEdgeX;\\n  if (imageDisplayWidth > screenWidth) {\\n    // Obrazek jest szerszy - oblicz które części będą widoczne\\n    const visibleWidth = screenWidth / imageDisplayWidth; // procent szerokości obrazka widoczny na ekranie\\n    const centerOffset = (1 - visibleWidth) / 2; // offset od środka\\n    leftEdgeX = Math.floor(canvas.width * centerOffset);\\n    rightEdgeX = Math.floor(canvas.width * (1 - centerOffset));\\n  } else {\\n    // Obrazek jest węższy - będą widoczne boki\\n    leftEdgeX = 0;\\n    rightEdgeX = canvas.width;\\n  }\\n  \\n  const leftColorSections = [];\\n  const rightColorSections = [];\\n  const sampleWidth = Math.floor(canvas.width * 0.03); // Jeszcze węższa próbka\\n  const sections = 5;\\n  \\n  for (let section = 0; section < sections; section++) {\\n    const startY = Math.floor((canvas.height / sections) * section);\\n    const endY = Math.floor((canvas.height / sections) * (section + 1));\\n    const leftSectionColors = [];\\n    const rightSectionColors = [];\\n    \\n    // Próbkuj kolory w tej sekcji\\n    for (let y = startY; y < endY; y += Math.max(1, Math.floor((endY - startY) / 8))) {\\n      // Lewa strona - próbkuj od lewej krawędzi widocznej części\\n      for (let x = leftEdgeX; x < leftEdgeX + sampleWidth && x < canvas.width; x += 2) {\\n        const index = (y * canvas.width + x) * 4;\\n        if (data[index + 3] > 128) { // Sprawdź czy piksel nie jest przezroczysty\\n          leftSectionColors.push({\\n            r: data[index],\\n            g: data[index + 1],\\n            b: data[index + 2]\\n          });\\n        }\\n      }\\n      \\n      // Prawa strona - próbkuj od prawej krawędzi widocznej części\\n      for (let x = rightEdgeX - sampleWidth; x < rightEdgeX && x >= 0; x += 2) {\\n        const index = (y * canvas.width + x) * 4;\\n        if (data[index + 3] > 128) { // Sprawdź czy piksel nie jest przezroczysty\\n          rightSectionColors.push({\\n            r: data[index],\\n            g: data[index + 1],\\n            b: data[index + 2]\\n          });\\n        }\\n      }\\n    }\\n    \\n    if (leftSectionColors.length > 0) {\\n      leftColorSections.push(averageColors(leftSectionColors));\\n    }\\n    if (rightSectionColors.length > 0) {\\n      rightColorSections.push(averageColors(rightSectionColors));\\n    }\\n  }\\n  \\n  // Debug info\\n  console.log(\'Image dimensions:\', canvas.width, \'x\', canvas.height);\\n  console.log(\'Screen dimensions:\', screenWidth, \'x\', screenHeight);\\n  console.log(\'Image display width:\', imageDisplayWidth);\\n  console.log(\'Left edge X:\', leftEdgeX, \'Right edge X:\', rightEdgeX);\\n  console.log(\'Left colors:\', leftColorSections);\\n  console.log(\'Right colors:\', rightColorSections);\\n  \\n  // Stwórz osobne gradienty dla każdej sekcji\\n  leftGradients = leftColorSections.map((color, index) => ({\\n    gradient: `linear-gradient(to right, \\n      rgba(${color.r}, ${color.g}, ${color.b}, 0.8) 0%, \\n      rgba(${color.r}, ${color.g}, ${color.b}, 0.4) 50%,\\n      transparent 100%)`,\\n    top: `${(index / sections) * 100}%`,\\n    height: `${100 / sections}%`\\n  }));\\n  \\n  rightGradients = rightColorSections.map((color, index) => ({\\n    gradient: `linear-gradient(to left, \\n      rgba(${color.r}, ${color.g}, ${color.b}, 0.8) 0%, \\n      rgba(${color.r}, ${color.g}, ${color.b}, 0.4) 50%,\\n      transparent 100%)`,\\n    top: `${(index / sections) * 100}%`,\\n    height: `${100 / sections}%`\\n  }));\\n  \\n  // Zachowaj też główny gradient dla kompatybilności\\n  if (leftColorSections.length > 0) {\\n    const avgLeft = averageColors(leftColorSections);\\n    leftGradient = `linear-gradient(to right, \\n      rgba(${avgLeft.r}, ${avgLeft.g}, ${avgLeft.b}, 0.7) 0%, \\n      rgba(${avgLeft.r}, ${avgLeft.g}, ${avgLeft.b}, 0.3) 50%,\\n      transparent 100%)`;\\n  }\\n  \\n  if (rightColorSections.length > 0) {\\n    const avgRight = averageColors(rightColorSections);\\n    rightGradient = `linear-gradient(to left, \\n      rgba(${avgRight.r}, ${avgRight.g}, ${avgRight.b}, 0.7) 0%, \\n      rgba(${avgRight.r}, ${avgRight.g}, ${avgRight.b}, 0.3) 50%,\\n      transparent 100%)`;\\n  }\\n}\\n\\nfunction averageColors(colors) {\\n  const total = colors.reduce((acc, color) => ({\\n    r: acc.r + color.r,\\n    g: acc.g + color.g,\\n    b: acc.b + color.b\\n  }), { r: 0, g: 0, b: 0 });\\n  \\n  return {\\n    r: Math.round(total.r / colors.length),\\n    g: Math.round(total.g / colors.length),\\n    b: Math.round(total.b / colors.length)\\n  };\\n}\\n\\nonMount(() => {\\n  if (machineImg) {\\n    if (machineImg.complete) {\\n      analyzeImageColors(machineImg);\\n    } else {\\n      machineImg.onload = () => analyzeImageColors(machineImg);\\n    }\\n  }\\n});\\n<\/script>\\n\\n<div in:fade out:fade class=\\"container targi-container\\" on:click={handleClick} on:keydown={handleClick} role=\\"button\\" tabindex=\\"0\\">\\n    \\n    <!-- Główny obrazek -->\\n    <img class=\\"machine\\" bind:this={machineImg} src=\\"/assets/landing_targi2025/MACHINE.jpg\\" alt=\\"Machine\\">\\n    \\n    <!-- Blur w tle -->\\n    <img class=\\"machine2\\" src=\\"/assets/landing_targi2025/MACHINE.jpg\\" alt=\\"Machine blur\\">\\n    \\n    <!-- Rozciągnięte i rozmyte krawędzie -->\\n    <div class=\\"edge-blur-left\\">\\n      <img src=\\"/assets/landing_targi2025/MACHINE.jpg\\" alt=\\"Left edge blur\\">\\n    </div>\\n    \\n    <div class=\\"edge-blur-right\\">\\n      <img src=\\"/assets/landing_targi2025/MACHINE.jpg\\" alt=\\"Right edge blur\\">\\n    </div>\\n    \\n    <img class=\\"gradient\\" src=\\"/assets/landing_targi2025/background1.png\\" alt=\\"Background\\">\\n    \\n    <!-- Dynamiczne gradienty po bokach - sekcyjne -->\\n    {#each leftGradients as leftGrad, index}\\n      <div class=\\"left-gradient-section\\" \\n           style=\\"background: {leftGrad.gradient}; top: {leftGrad.top}; height: {leftGrad.height}\\"></div>\\n    {/each}\\n    \\n    {#each rightGradients as rightGrad, index}\\n      <div class=\\"right-gradient-section\\" \\n           style=\\"background: {rightGrad.gradient}; top: {rightGrad.top}; height: {rightGrad.height}\\"></div>\\n    {/each}\\n    \\n    <!-- Zapasowe główne gradienty -->\\n    {#if leftGradient && leftGradients.length === 0}\\n      <div class=\\"left-gradient\\" style=\\"background: {leftGradient}\\"></div>\\n    {/if}\\n    \\n    {#if rightGradient && rightGradients.length === 0}\\n      <div class=\\"right-gradient\\" style=\\"background: {rightGradient}\\"></div>\\n    {/if}\\n          \\n  \\n \\n</div>\\n\\n<style lang=\\"scss\\">@charset \\"UTF-8\\";\\n:global(body.landing) {\\n  overflow: hidden;\\n  position: relative;\\n  height: 100vh;\\n  width: 100vw;\\n}\\n\\n.machine {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n  width: auto;\\n  height: 100vh;\\n  z-index: 2;\\n}\\n\\n.machine2 {\\n  filter: blur(660px);\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100vw;\\n  height: 100vh;\\n  object-fit: cover;\\n  z-index: 1;\\n}\\n\\n.gradient {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  width: 100%;\\n  height: 100%;\\n  filter: opacity(0.9) brightness(0.7);\\n}\\n\\n.targi-container {\\n  padding: 20px;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  width: 100%;\\n  height: 100%;\\n  z-index: 1000;\\n  background-image: url(/assets/landing_targi2025/background.jpg);\\n  background-size: cover;\\n}\\n\\n.left-gradient {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 40%;\\n  height: 100vh;\\n  z-index: 3;\\n  pointer-events: none;\\n}\\n\\n.right-gradient {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  width: 40%;\\n  height: 100vh;\\n  z-index: 3;\\n  pointer-events: none;\\n}\\n\\n.left-gradient-section {\\n  position: absolute;\\n  left: 0;\\n  width: 40%;\\n  z-index: 3;\\n  pointer-events: none;\\n}\\n\\n.right-gradient-section {\\n  position: absolute;\\n  right: 0;\\n  width: 40%;\\n  z-index: 3;\\n  pointer-events: none;\\n}\\n\\n/* Rozmyte krawędzie */\\n.edge-blur-left {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 50%;\\n  height: 100vh;\\n  z-index: 1;\\n  overflow: hidden;\\n  pointer-events: none;\\n}\\n\\n.edge-blur-left img {\\n  position: absolute;\\n  top: 50%;\\n  left: 0;\\n  transform: translateY(-50%) scaleX(3);\\n  width: auto;\\n  height: 100vh;\\n  filter: blur(80px);\\n  opacity: 0.8;\\n  object-fit: cover;\\n  /* Pokazuj tylko lewą część obrazka */\\n  clip-path: inset(0 70% 0 0);\\n}\\n\\n.edge-blur-right {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  width: 50%;\\n  height: 100vh;\\n  z-index: 1;\\n  overflow: hidden;\\n  pointer-events: none;\\n}\\n\\n.edge-blur-right img {\\n  position: absolute;\\n  top: 50%;\\n  right: 0;\\n  transform: translateY(-50%) scaleX(3);\\n  width: auto;\\n  height: 100vh;\\n  filter: blur(80px);\\n  opacity: 0.8;\\n  object-fit: cover;\\n  /* Pokazuj tylko prawą część obrazka */\\n  clip-path: inset(0 0 0 70%);\\n}</style>"],"names":[],"mappings":"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"}'
};
const Landing_targi = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let leftGradients = [];
  let rightGradients = [];
  let machineImg;
  $$result.css.add(css$1);
  return `<div class="container targi-container svelte-1q2nro5" role="button" tabindex="0"> <img class="machine svelte-1q2nro5" src="/assets/landing_targi2025/MACHINE.jpg" alt="Machine"${add_attribute("this", machineImg, 0)}>  <img class="machine2 svelte-1q2nro5" src="/assets/landing_targi2025/MACHINE.jpg" alt="Machine blur">  <div class="edge-blur-left svelte-1q2nro5" data-svelte-h="svelte-v1otyz"><img src="/assets/landing_targi2025/MACHINE.jpg" alt="Left edge blur" class="svelte-1q2nro5"></div> <div class="edge-blur-right svelte-1q2nro5" data-svelte-h="svelte-1n64xq1"><img src="/assets/landing_targi2025/MACHINE.jpg" alt="Right edge blur" class="svelte-1q2nro5"></div> <img class="gradient svelte-1q2nro5" src="/assets/landing_targi2025/background1.png" alt="Background">  ${each(leftGradients, (leftGrad, index) => {
    return `<div class="left-gradient-section svelte-1q2nro5" style="${"background: " + escape(leftGrad.gradient, true) + "; top: " + escape(leftGrad.top, true) + "; height: " + escape(leftGrad.height, true)}"></div>`;
  })} ${each(rightGradients, (rightGrad, index) => {
    return `<div class="right-gradient-section svelte-1q2nro5" style="${"background: " + escape(rightGrad.gradient, true) + "; top: " + escape(rightGrad.top, true) + "; height: " + escape(rightGrad.height, true)}"></div>`;
  })}  ${``} ${``} </div>`;
});
const css = {
  code: ".lottie-player .animation svg > g > g:nth-child(5){opacity:0}.preloader.svelte-bninx1{position:fixed;inset:0;z-index:9999;background:white;display:flex;align-items:center;justify-content:center;transition:opacity 0.5s;background:linear-gradient(180deg, #7c8897 0%, #3e4042 100%)}*{margin:0;padding:0;box-sizing:border-box}body{width:100%;overflow-x:hidden}",
  map: `{"version":3,"file":"+layout.svelte","sources":["+layout.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { fade } from 'svelte/transition';\\nimport { page } from '$app/stores';\\nimport '../lib/app.css';\\nimport { onMount } from 'svelte';\\nimport { preloaderVisible } from '$lib/preloaderStore';\\nimport { activePage } from \\"$lib/visibilityStore\\";\\nimport { landingVisible } from '$lib/landingStore';\\nimport LandingTargi from '../components/landing_targi.svelte';\\nlet loading = true;\\nonMount(() => {\\n    // Sprawdź czy strona już się załadowała\\n    if (document.readyState === 'complete') {\\n        loading = false;\\n    }\\n    else {\\n        window.addEventListener('load', () => {\\n            loading = false;\\n        });\\n    }\\n    // Fallback - wyłącz preloader po 1 sekundzie\\n    setTimeout(() => loading = false, 500);\\n});\\n$: preloaderVisible.set(loading);\\n// Add active page class to body\\n$: if (typeof document !== 'undefined') {\\n    // Remove all page classes\\n    document.body.classList.remove('home', 'maszyny', 'serwis', 'onas', 'kontakt', 'landing');\\n    // Add current page class\\n    document.body.classList.add($activePage);\\n    // Add landing class if landing is visible\\n    if ($landingVisible) {\\n        document.body.classList.add('landing');\\n    }\\n}\\n<\/script>\\n\\n{#if loading}\\n  <div class=\\"preloader no-sel gradientHero\\">\\n    <img src=\\"/assets/logo-certus.svg\\" alt=\\"Wczytuje stronę...\\" width=\\"64\\" height=\\"64\\" />\\n  </div>\\n{/if}\\n\\n{#key $page.url.pathname}\\n  <div transition:fade>\\n    <slot />\\n  </div>\\n{/key}\\n\\n\\n\\n{#if $landingVisible}\\n  <LandingTargi />\\n{/if}\\n\\n\\n\\n\\n\\n<style lang=\\"scss\\">:global(.lottie-player .animation svg > g > g:nth-child(5)) {\\n  opacity: 0;\\n}\\n\\n.preloader {\\n  position: fixed;\\n  inset: 0;\\n  z-index: 9999;\\n  background: white;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  transition: opacity 0.5s;\\n  background: linear-gradient(180deg, #7c8897 0%, #3e4042 100%);\\n}\\n\\n:global(*) {\\n  margin: 0;\\n  padding: 0;\\n  box-sizing: border-box;\\n}\\n\\n:global(body) {\\n  width: 100%;\\n  overflow-x: hidden;\\n}</style>"],"names":[],"mappings":"AA0D2B,kDAAoD,CAC7E,OAAO,CAAE,CACX,CAEA,wBAAW,CACT,QAAQ,CAAE,KAAK,CACf,KAAK,CAAE,CAAC,CACR,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,KAAK,CACjB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,CACvB,UAAU,CAAE,OAAO,CAAC,IAAI,CACxB,UAAU,CAAE,gBAAgB,MAAM,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAC9D,CAEQ,CAAG,CACT,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,UACd,CAEQ,IAAM,CACZ,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,MACd"}`
};
const Layout = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $landingVisible, $$unsubscribe_landingVisible;
  let $activePage, $$unsubscribe_activePage;
  let $$unsubscribe_page;
  $$unsubscribe_landingVisible = subscribe(landingVisible, (value) => $landingVisible = value);
  $$unsubscribe_activePage = subscribe(activePage, (value) => $activePage = value);
  $$unsubscribe_page = subscribe(page, (value) => value);
  let loading = true;
  $$result.css.add(css);
  {
    preloaderVisible.set(loading);
  }
  {
    if (typeof document !== "undefined") {
      document.body.classList.remove("home", "maszyny", "serwis", "onas", "kontakt", "landing");
      document.body.classList.add($activePage);
      if ($landingVisible) {
        document.body.classList.add("landing");
      }
    }
  }
  $$unsubscribe_landingVisible();
  $$unsubscribe_activePage();
  $$unsubscribe_page();
  return `${`<div class="preloader no-sel gradientHero svelte-bninx1" data-svelte-h="svelte-1fvd3b6"><img src="/assets/logo-certus.svg" alt="Wczytuje stronę..." width="64" height="64"></div>`} <div>${slots.default ? slots.default({}) : ``}</div> ${$landingVisible ? `${validate_component(Landing_targi, "LandingTargi").$$render($$result, {}, {}, {})}` : ``}`;
});
export {
  Layout as default
};
